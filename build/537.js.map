{"version":3,"file":"537.js","mappings":"yKAQA,MAAMA,UAAsB,IAC1BC,gBAAkB,QAClB,QAAIC,GACF,MAAO,OACT,CACAC,QACA,WAAAC,CAAYC,EAAOC,GACjBC,MAAMF,EAAOC,IACb,SAAO,KACLE,KAAKL,QAAU,IAAI,IAAmBK,KAAKC,MAAOH,EAAI,GACrDE,KAAKE,MACV,CACA,KAAAC,GACEJ,MAAMI,QACY,UAAdH,KAAKN,MAAkBM,KAAKF,IAAIM,OAAO,iBAAkBJ,KAC/D,CAMA,SAAIH,GACF,OAAOG,KAAKC,KACd,E","sources":["webpack://rrze-video/./node_modules/vidstack/prod/providers/vidstack-audio.js"],"sourcesContent":["import { scoped } from '../chunks/vidstack-CRlI3Mh7.js';\nimport { HTMLMediaProvider } from './vidstack-html.js';\nimport { HTMLAirPlayAdapter } from '../chunks/vidstack-CQ0j0noX.js';\nimport '../chunks/vidstack-C1T0MO0v.js';\nimport '../chunks/vidstack-DSYpsFWk.js';\nimport '../chunks/vidstack-Dihypf8P.js';\nimport '../chunks/vidstack-D5EzK014.js';\n\nclass AudioProvider extends HTMLMediaProvider {\n  $$PROVIDER_TYPE = \"AUDIO\";\n  get type() {\n    return \"audio\";\n  }\n  airPlay;\n  constructor(audio, ctx) {\n    super(audio, ctx);\n    scoped(() => {\n      this.airPlay = new HTMLAirPlayAdapter(this.media, ctx);\n    }, this.scope);\n  }\n  setup() {\n    super.setup();\n    if (this.type === \"audio\") this.ctx.notify(\"provider-setup\", this);\n  }\n  /**\n   * The native HTML `<audio>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement}\n   */\n  get audio() {\n    return this.media;\n  }\n}\n\nexport { AudioProvider };\n"],"names":["AudioProvider","$$PROVIDER_TYPE","type","airPlay","constructor","audio","ctx","super","this","media","scope","setup","notify"],"sourceRoot":""}