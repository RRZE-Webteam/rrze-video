{"version":3,"file":"408.js","mappings":"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","sources":["webpack://rrze-video/./node_modules/vidstack/prod/chunks/vidstack-O8cuP9CY.js","webpack://rrze-video/./node_modules/vidstack/prod/chunks/vidstack-Zc3I7oOd.js","webpack://rrze-video/./node_modules/vidstack/prod/providers/vidstack-youtube.js"],"sourcesContent":["import { signal, listenEvent, effect, peek, isString } from './vidstack-CRlI3Mh7.js';\nimport { appendParamsToURL } from './vidstack-CSpLxgg_.js';\n\nclass EmbedProvider {\n  #iframe;\n  src = signal(\"\");\n  /**\n   * Defines which referrer is sent when fetching the resource.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy}\n   */\n  referrerPolicy = null;\n  get iframe() {\n    return this.#iframe;\n  }\n  constructor(iframe) {\n    this.#iframe = iframe;\n    iframe.setAttribute(\"frameBorder\", \"0\");\n    iframe.setAttribute(\"aria-hidden\", \"true\");\n    iframe.setAttribute(\n      \"allow\",\n      \"autoplay; fullscreen; encrypted-media; picture-in-picture; accelerometer; gyroscope\"\n    );\n    if (this.referrerPolicy !== null) {\n      iframe.setAttribute(\"referrerpolicy\", this.referrerPolicy);\n    }\n  }\n  setup() {\n    listenEvent(window, \"message\", this.#onWindowMessage.bind(this));\n    listenEvent(this.#iframe, \"load\", this.onLoad.bind(this));\n    effect(this.#watchSrc.bind(this));\n  }\n  #watchSrc() {\n    const src = this.src();\n    if (!src.length) {\n      this.#iframe.setAttribute(\"src\", \"\");\n      return;\n    }\n    const params = peek(() => this.buildParams());\n    this.#iframe.setAttribute(\"src\", appendParamsToURL(src, params));\n  }\n  postMessage(message, target) {\n    this.#iframe.contentWindow?.postMessage(JSON.stringify(message), target ?? \"*\");\n  }\n  #onWindowMessage(event) {\n    const origin = this.getOrigin(), isOriginMatch = (event.source === null || event.source === this.#iframe?.contentWindow) && (!isString(origin) || origin === event.origin);\n    if (!isOriginMatch) return;\n    try {\n      const message = JSON.parse(event.data);\n      if (message) this.onMessage(message, event);\n      return;\n    } catch (e) {\n    }\n    if (event.data) this.onMessage(event.data, event);\n  }\n}\n\nexport { EmbedProvider };\n","const videoIdRE = /(?:youtu\\.be|youtube|youtube\\.com|youtube-nocookie\\.com)\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=|)((?:\\w|-){11})/;\nconst posterCache = /* @__PURE__ */ new Map();\nconst pendingFetch = /* @__PURE__ */ new Map();\nfunction resolveYouTubeVideoId(src) {\n  return src.match(videoIdRE)?.[1];\n}\nasync function findYouTubePoster(videoId, abort) {\n  if (posterCache.has(videoId)) return posterCache.get(videoId);\n  if (pendingFetch.has(videoId)) return pendingFetch.get(videoId);\n  const pending = new Promise(async (resolve) => {\n    const sizes = [\"maxresdefault\", \"sddefault\", \"hqdefault\"];\n    for (const size of sizes) {\n      for (const webp of [true, false]) {\n        const url = resolveYouTubePosterURL(videoId, size, webp), response = await fetch(url, {\n          mode: \"no-cors\",\n          signal: abort.signal\n        });\n        if (response.status < 400) {\n          posterCache.set(videoId, url);\n          resolve(url);\n          return;\n        }\n      }\n    }\n  }).catch(() => \"\").finally(() => pendingFetch.delete(videoId));\n  pendingFetch.set(videoId, pending);\n  return pending;\n}\nfunction resolveYouTubePosterURL(videoId, size, webp) {\n  const type = webp ? \"webp\" : \"jpg\";\n  return `https://i.ytimg.com/${webp ? \"vi_webp\" : \"vi\"}/${videoId}/${size}.${type}`;\n}\n\nexport { findYouTubePoster, resolveYouTubeVideoId };\n","import { createScope, signal, effect, isString, deferredPromise, isUndefined, isObject, isNumber, isBoolean } from '../chunks/vidstack-CRlI3Mh7.js';\nimport { TimeRange } from '../chunks/vidstack-BmMUBVGQ.js';\nimport { preconnect } from '../chunks/vidstack-CSpLxgg_.js';\nimport { EmbedProvider } from '../chunks/vidstack-O8cuP9CY.js';\nimport { resolveYouTubeVideoId } from '../chunks/vidstack-Zc3I7oOd.js';\nimport '../chunks/vidstack-C1T0MO0v.js';\n\nconst YouTubePlayerState = {\n  Unstarted: -1,\n  Ended: 0,\n  Playing: 1,\n  Paused: 2,\n  Buffering: 3,\n  Cued: 5\n};\n\nclass YouTubeProvider extends EmbedProvider {\n  $$PROVIDER_TYPE = \"YOUTUBE\";\n  scope = createScope();\n  #ctx;\n  #videoId = signal(\"\");\n  #state = -1;\n  #currentSrc = null;\n  #seekingTimer = -1;\n  #pausedSeeking = false;\n  #promises = /* @__PURE__ */ new Map();\n  constructor(iframe, ctx) {\n    super(iframe);\n    this.#ctx = ctx;\n  }\n  /**\n   * Sets the player's interface language. The parameter value is an ISO 639-1 two-letter\n   * language code or a fully specified locale. For example, fr and fr-ca are both valid values.\n   * Other language input codes, such as IETF language tags (BCP 47) might also be handled properly.\n   *\n   * The interface language is used for tooltips in the player and also affects the default caption\n   * track. Note that YouTube might select a different caption track language for a particular\n   * user based on the user's individual language preferences and the availability of caption tracks.\n   *\n   * @defaultValue 'en'\n   */\n  language = \"en\";\n  color = \"red\";\n  /**\n   * Whether cookies should be enabled on the embed. This is turned off by default to be\n   * GDPR-compliant.\n   *\n   * @defaultValue `false`\n   */\n  cookies = false;\n  get currentSrc() {\n    return this.#currentSrc;\n  }\n  get type() {\n    return \"youtube\";\n  }\n  get videoId() {\n    return this.#videoId();\n  }\n  preconnect() {\n    preconnect(this.getOrigin());\n  }\n  setup() {\n    super.setup();\n    effect(this.#watchVideoId.bind(this));\n    this.#ctx.notify(\"provider-setup\", this);\n  }\n  destroy() {\n    this.#reset();\n    const message = \"provider destroyed\";\n    for (const promises of this.#promises.values()) {\n      for (const { reject } of promises) reject(message);\n    }\n    this.#promises.clear();\n  }\n  async play() {\n    return this.#remote(\"playVideo\");\n  }\n  #playFail(message) {\n    this.#getPromise(\"playVideo\")?.reject(message);\n  }\n  async pause() {\n    return this.#remote(\"pauseVideo\");\n  }\n  #pauseFail(message) {\n    this.#getPromise(\"pauseVideo\")?.reject(message);\n  }\n  setMuted(muted) {\n    if (muted) this.#remote(\"mute\");\n    else this.#remote(\"unMute\");\n  }\n  setCurrentTime(time) {\n    this.#pausedSeeking = this.#ctx.$state.paused();\n    this.#remote(\"seekTo\", time);\n    this.#ctx.notify(\"seeking\", time);\n  }\n  setVolume(volume) {\n    this.#remote(\"setVolume\", volume * 100);\n  }\n  setPlaybackRate(rate) {\n    this.#remote(\"setPlaybackRate\", rate);\n  }\n  async loadSource(src) {\n    if (!isString(src.src)) {\n      this.#currentSrc = null;\n      this.#videoId.set(\"\");\n      return;\n    }\n    const videoId = resolveYouTubeVideoId(src.src);\n    this.#videoId.set(videoId ?? \"\");\n    this.#currentSrc = src;\n  }\n  getOrigin() {\n    return !this.cookies ? \"https://www.youtube-nocookie.com\" : \"https://www.youtube.com\";\n  }\n  #watchVideoId() {\n    this.#reset();\n    const videoId = this.#videoId();\n    if (!videoId) {\n      this.src.set(\"\");\n      return;\n    }\n    this.src.set(`${this.getOrigin()}/embed/${videoId}`);\n    this.#ctx.notify(\"load-start\");\n  }\n  buildParams() {\n    const { keyDisabled } = this.#ctx.$props, { muted, playsInline, nativeControls } = this.#ctx.$state, showControls = nativeControls();\n    return {\n      autoplay: 0,\n      cc_lang_pref: this.language,\n      cc_load_policy: showControls ? 1 : void 0,\n      color: this.color,\n      controls: showControls ? 1 : 0,\n      disablekb: !showControls || keyDisabled() ? 1 : 0,\n      enablejsapi: 1,\n      fs: 1,\n      hl: this.language,\n      iv_load_policy: showControls ? 1 : 3,\n      mute: muted() ? 1 : 0,\n      playsinline: playsInline() ? 1 : 0\n    };\n  }\n  #remote(command, arg) {\n    let promise = deferredPromise(), promises = this.#promises.get(command);\n    if (!promises) this.#promises.set(command, promises = []);\n    promises.push(promise);\n    this.postMessage({\n      event: \"command\",\n      func: command,\n      args: arg ? [arg] : void 0\n    });\n    return promise.promise;\n  }\n  onLoad() {\n    window.setTimeout(() => this.postMessage({ event: \"listening\" }), 100);\n  }\n  #onReady(trigger) {\n    this.#ctx.notify(\"loaded-metadata\");\n    this.#ctx.notify(\"loaded-data\");\n    this.#ctx.delegate.ready(void 0, trigger);\n  }\n  #onPause(trigger) {\n    this.#getPromise(\"pauseVideo\")?.resolve();\n    this.#ctx.notify(\"pause\", void 0, trigger);\n  }\n  #onTimeUpdate(time, trigger) {\n    const { duration, realCurrentTime } = this.#ctx.$state, hasEnded = this.#state === YouTubePlayerState.Ended, boundTime = hasEnded ? duration() : time;\n    this.#ctx.notify(\"time-change\", boundTime, trigger);\n    if (!hasEnded && Math.abs(boundTime - realCurrentTime()) > 1) {\n      this.#ctx.notify(\"seeking\", boundTime, trigger);\n    }\n  }\n  #onProgress(buffered, seekable, trigger) {\n    const detail = {\n      buffered: new TimeRange(0, buffered),\n      seekable\n    };\n    this.#ctx.notify(\"progress\", detail, trigger);\n    const { seeking, realCurrentTime } = this.#ctx.$state;\n    if (seeking() && buffered > realCurrentTime()) {\n      this.#onSeeked(trigger);\n    }\n  }\n  #onSeeked(trigger) {\n    const { paused, realCurrentTime } = this.#ctx.$state;\n    window.clearTimeout(this.#seekingTimer);\n    this.#seekingTimer = window.setTimeout(\n      () => {\n        this.#ctx.notify(\"seeked\", realCurrentTime(), trigger);\n        this.#seekingTimer = -1;\n      },\n      paused() ? 100 : 0\n    );\n    this.#pausedSeeking = false;\n  }\n  #onEnded(trigger) {\n    const { seeking } = this.#ctx.$state;\n    if (seeking()) this.#onSeeked(trigger);\n    this.#ctx.notify(\"pause\", void 0, trigger);\n    this.#ctx.notify(\"end\", void 0, trigger);\n  }\n  #onStateChange(state, trigger) {\n    const { started, paused, seeking } = this.#ctx.$state, isPlaying = state === YouTubePlayerState.Playing, isBuffering = state === YouTubePlayerState.Buffering, isPendingPlay = !isUndefined(this.#getPromise(\"playVideo\")), isPlay = (paused() || isPendingPlay) && (isBuffering || isPlaying);\n    if (isBuffering) this.#ctx.notify(\"waiting\", void 0, trigger);\n    if (seeking() && isPlaying) {\n      this.#onSeeked(trigger);\n    }\n    if (!started() && isPlay && this.#pausedSeeking) {\n      this.#playFail(\"invalid internal play operation\");\n      if (isPlaying) {\n        this.pause();\n        this.#pausedSeeking = false;\n      }\n      return;\n    }\n    if (isPlay) {\n      this.#getPromise(\"playVideo\")?.resolve();\n      this.#ctx.notify(\"play\", void 0, trigger);\n    }\n    switch (state) {\n      case YouTubePlayerState.Unstarted:\n        this.#playFail(\"provider rejected\");\n        this.#pauseFail(\"provider rejected\");\n        this.#ctx.notify(\"pause\", void 0, trigger);\n        break;\n      case YouTubePlayerState.Cued:\n        this.#onReady(trigger);\n        break;\n      case YouTubePlayerState.Playing:\n        this.#ctx.notify(\"playing\", void 0, trigger);\n        break;\n      case YouTubePlayerState.Paused:\n        this.#onPause(trigger);\n        break;\n      case YouTubePlayerState.Ended:\n        this.#onEnded(trigger);\n        break;\n    }\n    this.#state = state;\n  }\n  onMessage({ info }, event) {\n    if (!info) return;\n    const { title, intrinsicDuration, playbackRate } = this.#ctx.$state;\n    if (isObject(info.videoData) && info.videoData.title !== title()) {\n      this.#ctx.notify(\"title-change\", info.videoData.title, event);\n    }\n    if (isNumber(info.duration) && info.duration !== intrinsicDuration()) {\n      if (isNumber(info.videoLoadedFraction)) {\n        const buffered = info.progressState?.loaded ?? info.videoLoadedFraction * info.duration, seekable = new TimeRange(0, info.duration);\n        this.#onProgress(buffered, seekable, event);\n      }\n      this.#ctx.notify(\"duration-change\", info.duration, event);\n    }\n    if (isNumber(info.playbackRate) && info.playbackRate !== playbackRate()) {\n      this.#ctx.notify(\"rate-change\", info.playbackRate, event);\n    }\n    if (info.progressState) {\n      const { current, seekableStart, seekableEnd, loaded, duration } = info.progressState;\n      this.#onTimeUpdate(current, event);\n      this.#onProgress(loaded, new TimeRange(seekableStart, seekableEnd), event);\n      if (duration !== intrinsicDuration()) {\n        this.#ctx.notify(\"duration-change\", duration, event);\n      }\n    }\n    if (isNumber(info.volume) && isBoolean(info.muted)) {\n      const detail = {\n        muted: info.muted,\n        volume: info.volume / 100\n      };\n      this.#ctx.notify(\"volume-change\", detail, event);\n    }\n    if (isNumber(info.playerState) && info.playerState !== this.#state) {\n      this.#onStateChange(info.playerState, event);\n    }\n  }\n  #reset() {\n    this.#state = -1;\n    this.#seekingTimer = -1;\n    this.#pausedSeeking = false;\n  }\n  #getPromise(command) {\n    return this.#promises.get(command)?.shift();\n  }\n}\n\nexport { YouTubeProvider };\n"],"names":["EmbedProvider","src","referrerPolicy","iframe","this","constructor","setAttribute","setup","window","bind","onLoad","length","params","buildParams","postMessage","message","target","contentWindow","JSON","stringify","event","origin","getOrigin","source","parse","data","onMessage","e","videoIdRE","posterCache","Map","pendingFetch","resolveYouTubeVideoId","match","async","findYouTubePoster","videoId","abort","has","get","pending","Promise","resolve","sizes","size","webp","url","resolveYouTubePosterURL","fetch","mode","signal","status","set","catch","finally","delete","YouTubeProvider","$$PROVIDER_TYPE","scope","ctx","super","language","color","cookies","currentSrc","type","preconnect","notify","destroy","promises","values","reject","clear","play","pause","setMuted","muted","setCurrentTime","time","$state","paused","setVolume","volume","setPlaybackRate","rate","loadSource","keyDisabled","$props","playsInline","nativeControls","showControls","autoplay","cc_lang_pref","cc_load_policy","controls","disablekb","enablejsapi","fs","hl","iv_load_policy","mute","playsinline","command","arg","promise","push","func","args","setTimeout","trigger","delegate","ready","duration","realCurrentTime","hasEnded","boundTime","Math","abs","buffered","seekable","detail","seeking","clearTimeout","state","started","isPlaying","isBuffering","isPendingPlay","isPlay","info","title","intrinsicDuration","playbackRate","videoData","videoLoadedFraction","progressState","loaded","current","seekableStart","seekableEnd","playerState","shift"],"sourceRoot":""}