{"version":3,"file":"900.js","mappings":"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","sources":["webpack://rrze-video/./node_modules/media-captions/dist/prod/ssa-parser.js"],"sourcesContent":["import { b as VTTCue, p as parseVTTTimestamp } from './index.js';\n\nconst FORMAT_START_RE = /^Format:[\\s\\t]*/, STYLE_START_RE = /^Style:[\\s\\t]*/, DIALOGUE_START_RE = /^Dialogue:[\\s\\t]*/, FORMAT_SPLIT_RE = /[\\s\\t]*,[\\s\\t]*/, STYLE_FUNCTION_RE = /\\{[^}]+\\}/g, NEW_LINE_RE = /\\\\N/g, STYLES_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Styles\\]$/, EVENTS_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Events\\]$/;\nclass SSAParser {\n  h;\n  O = 0;\n  c = null;\n  l = [];\n  m = [];\n  N = null;\n  f;\n  P = {};\n  async init(init) {\n    this.h = init;\n    if (init.errors)\n      this.f = (await import('./errors.js')).ParseErrorBuilder;\n  }\n  parse(line, lineCount) {\n    if (this.O) {\n      switch (this.O) {\n        case 1:\n          if (line === \"\") {\n            this.O = 0;\n          } else if (STYLE_START_RE.test(line)) {\n            if (this.N) {\n              const styles = line.replace(STYLE_START_RE, \"\").split(FORMAT_SPLIT_RE);\n              this.S(styles);\n            } else {\n              this.g(this.f?.T(\"Style\", lineCount));\n            }\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 2;\n          }\n          break;\n        case 2:\n          if (line === \"\") {\n            this.Q();\n          } else if (DIALOGUE_START_RE.test(line)) {\n            this.Q();\n            if (this.N) {\n              const dialogue = line.replace(DIALOGUE_START_RE, \"\").split(FORMAT_SPLIT_RE), cue = this.U(dialogue, lineCount);\n              if (cue)\n                this.c = cue;\n            } else {\n              this.g(this.f?.T(\"Dialogue\", lineCount));\n            }\n          } else if (this.c) {\n            this.c.text += \"\\n\" + line.replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (STYLES_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 1;\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n          }\n      }\n    } else if (line === \"\") ; else if (STYLES_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 1;\n    } else if (EVENTS_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 2;\n    }\n  }\n  done() {\n    return {\n      metadata: {},\n      cues: this.l,\n      regions: [],\n      errors: this.m\n    };\n  }\n  Q() {\n    if (!this.c)\n      return;\n    this.l.push(this.c);\n    this.h.onCue?.(this.c);\n    this.c = null;\n  }\n  S(values) {\n    let name = \"Default\", styles = {}, outlineX, align = \"center\", vertical = \"bottom\", marginV, outlineY = 1.2, outlineColor, bgColor, borderStyle = 3, transform = [];\n    for (let i = 0; i < this.N.length; i++) {\n      const field = this.N[i], value = values[i];\n      switch (field) {\n        case \"Name\":\n          name = value;\n          break;\n        case \"Fontname\":\n          styles[\"font-family\"] = value;\n          break;\n        case \"Fontsize\":\n          styles[\"font-size\"] = `calc(${value} / var(--overlay-height))`;\n          break;\n        case \"PrimaryColour\":\n          const color = parseColor(value);\n          if (color)\n            styles[\"--cue-color\"] = color;\n          break;\n        case \"BorderStyle\":\n          borderStyle = parseInt(value, 10);\n          break;\n        case \"BackColour\":\n          bgColor = parseColor(value);\n          break;\n        case \"OutlineColour\":\n          const _outlineColor = parseColor(value);\n          if (_outlineColor)\n            outlineColor = _outlineColor;\n          break;\n        case \"Bold\":\n          if (parseInt(value))\n            styles[\"font-weight\"] = \"bold\";\n          break;\n        case \"Italic\":\n          if (parseInt(value))\n            styles[\"font-style\"] = \"italic\";\n          break;\n        case \"Underline\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"underline\";\n          break;\n        case \"StrikeOut\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"line-through\";\n          break;\n        case \"Spacing\":\n          styles[\"letter-spacing\"] = value + \"px\";\n          break;\n        case \"AlphaLevel\":\n          styles[\"opacity\"] = parseFloat(value);\n          break;\n        case \"ScaleX\":\n          transform.push(`scaleX(${parseFloat(value) / 100})`);\n          break;\n        case \"ScaleY\":\n          transform.push(`scaleY(${parseFloat(value) / 100})`);\n          break;\n        case \"Angle\":\n          transform.push(`rotate(${value}deg)`);\n          break;\n        case \"Shadow\":\n          outlineY = parseInt(value, 10) * 1.2;\n          break;\n        case \"MarginL\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-left\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginR\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-right\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginV\":\n          marginV = parseFloat(value);\n          break;\n        case \"Outline\":\n          outlineX = parseInt(value, 10);\n          break;\n        case \"Alignment\":\n          const alignment = parseInt(value, 10);\n          if (alignment >= 4)\n            vertical = alignment >= 7 ? \"top\" : \"center\";\n          switch (alignment % 3) {\n            case 1:\n              align = \"start\";\n              break;\n            case 2:\n              align = \"center\";\n              break;\n            case 3:\n              align = \"end\";\n              break;\n          }\n      }\n    }\n    styles.R = vertical;\n    styles[\"--cue-white-space\"] = \"normal\";\n    styles[\"--cue-line-height\"] = \"normal\";\n    styles[\"--cue-text-align\"] = align;\n    if (vertical === \"center\") {\n      styles[`--cue-top`] = \"50%\";\n      transform.push(\"translateY(-50%)\");\n    } else {\n      styles[`--cue-${vertical}`] = (marginV || 0) + \"px\";\n    }\n    if (borderStyle === 1) {\n      styles[\"--cue-padding-y\"] = \"0\";\n    }\n    if (borderStyle === 1 || bgColor) {\n      styles[\"--cue-bg-color\"] = borderStyle === 1 ? \"none\" : bgColor;\n    }\n    if (borderStyle === 3 && outlineColor) {\n      styles[\"--cue-outline\"] = `${outlineX}px solid ${outlineColor}`;\n    }\n    if (borderStyle === 1 && typeof outlineX === \"number\") {\n      const color = bgColor ?? \"#000\";\n      styles[\"--cue-text-shadow\"] = [\n        outlineColor && buildTextShadow(outlineX * 1.2, outlineY * 1.2, outlineColor),\n        outlineColor ? buildTextShadow(outlineX * (outlineX / 2), outlineY * (outlineX / 2), color) : buildTextShadow(outlineX, outlineY, color)\n      ].filter(Boolean).join(\", \");\n    }\n    if (transform.length)\n      styles[\"--cue-transform\"] = transform.join(\" \");\n    this.P[name] = styles;\n  }\n  U(values, lineCount) {\n    const fields = this.V(values);\n    const timestamp = this.q(fields.Start, fields.End, lineCount);\n    if (!timestamp)\n      return;\n    const cue = new VTTCue(timestamp[0], timestamp[1], \"\"), styles = { ...this.P[fields.Style] || {} }, voice = fields.Name ? `<v ${fields.Name}>` : \"\";\n    const vertical = styles.R, marginLeft = fields.MarginL && parseFloat(fields.MarginL), marginRight = fields.MarginR && parseFloat(fields.MarginR), marginV = fields.MarginV && parseFloat(fields.MarginV);\n    if (marginLeft) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-left\"] = marginLeft + \"px\";\n    }\n    if (marginRight) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-right\"] = marginRight + \"px\";\n    }\n    if (marginV && vertical !== \"center\") {\n      styles[`--cue-${vertical}`] = marginV + \"px\";\n    }\n    cue.text = voice + values.slice(this.N.length - 1).join(\", \").replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n    delete styles.R;\n    if (Object.keys(styles).length)\n      cue.style = styles;\n    return cue;\n  }\n  V(values) {\n    const fields = {};\n    for (let i = 0; i < this.N.length; i++) {\n      fields[this.N[i]] = values[i];\n    }\n    return fields;\n  }\n  q(startTimeText, endTimeText, lineCount) {\n    const startTime = parseVTTTimestamp(startTimeText), endTime = parseVTTTimestamp(endTimeText);\n    if (startTime !== null && endTime !== null && endTime > startTime) {\n      return [startTime, endTime];\n    } else {\n      if (startTime === null) {\n        this.g(this.f?.s(startTimeText, lineCount));\n      }\n      if (endTime === null) {\n        this.g(this.f?.t(endTimeText, lineCount));\n      }\n      if (startTime != null && endTime !== null && endTime > startTime) {\n        this.g(this.f?.u(startTime, endTime, lineCount));\n      }\n    }\n  }\n  g(error) {\n    if (!error)\n      return;\n    this.m.push(error);\n    if (this.h.strict) {\n      this.h.cancel();\n      throw error;\n    } else {\n      this.h.onError?.(error);\n    }\n  }\n}\nfunction parseColor(color) {\n  const abgr = parseInt(color.replace(\"&H\", \"\"), 16);\n  if (abgr >= 0) {\n    const a = abgr >> 24 & 255 ^ 255;\n    const alpha = a / 255;\n    const b = abgr >> 16 & 255;\n    const g = abgr >> 8 & 255;\n    const r = abgr & 255;\n    return \"rgba(\" + [r, g, b, alpha].join(\",\") + \")\";\n  }\n  return null;\n}\nfunction buildTextShadow(x, y, color) {\n  const noOfShadows = Math.ceil(2 * Math.PI * x);\n  let textShadow = \"\";\n  for (let i = 0; i < noOfShadows; i++) {\n    const theta = 2 * Math.PI * i / noOfShadows;\n    textShadow += x * Math.cos(theta) + \"px \" + y * Math.sin(theta) + \"px 0 \" + color + (i == noOfShadows - 1 ? \"\" : \",\");\n  }\n  return textShadow;\n}\nfunction createSSAParser() {\n  return new SSAParser();\n}\n\nexport { SSAParser, createSSAParser as default };\n"],"names":["FORMAT_START_RE","STYLE_START_RE","DIALOGUE_START_RE","FORMAT_SPLIT_RE","STYLE_FUNCTION_RE","NEW_LINE_RE","STYLES_SECTION_START_RE","EVENTS_SECTION_START_RE","SSAParser","h","O","c","l","m","N","f","P","init","this","errors","ParseErrorBuilder","parse","line","lineCount","test","styles","replace","split","S","g","T","Q","dialogue","cue","U","text","done","metadata","cues","regions","push","onCue","values","outlineX","marginV","outlineColor","bgColor","name","align","vertical","outlineY","borderStyle","transform","i","length","field","value","color","parseColor","parseInt","_outlineColor","parseFloat","alignment","R","buildTextShadow","filter","Boolean","join","fields","V","timestamp","q","Start","End","Style","voice","Name","marginLeft","MarginL","marginRight","MarginR","MarginV","slice","Object","keys","style","startTimeText","endTimeText","startTime","p","endTime","s","t","u","error","strict","cancel","onError","abgr","x","y","noOfShadows","Math","ceil","PI","textShadow","theta","cos","sin","createSSAParser"],"sourceRoot":""}