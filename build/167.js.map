{"version":3,"file":"167.js","mappings":"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","sources":["webpack://rrze-video/./node_modules/vidstack/prod/providers/vidstack-video.js"],"sourcesContent":["import { onDispose, EventsController, listenEvent, DOMEvent, scoped } from '../chunks/vidstack-CRlI3Mh7.js';\nimport { canUsePictureInPicture, canUseVideoPresentation, canPlayHLSNatively } from '../chunks/vidstack-C1T0MO0v.js';\nimport { HTMLMediaProvider } from './vidstack-html.js';\nimport { HTMLAirPlayAdapter } from '../chunks/vidstack-CQ0j0noX.js';\nimport { TextTrack, TextTrackSymbol } from '../chunks/vidstack-DpjEe5xw.js';\nimport '../chunks/vidstack-DSYpsFWk.js';\nimport '../chunks/vidstack-Dihypf8P.js';\nimport '../chunks/vidstack-D5EzK014.js';\nimport '../chunks/vidstack-CSpLxgg_.js';\nimport '../chunks/vidstack-DE4XvkHU.js';\n\nclass NativeHLSTextTracks {\n  #video;\n  #ctx;\n  constructor(video, ctx) {\n    this.#video = video;\n    this.#ctx = ctx;\n    video.textTracks.onaddtrack = this.#onAddTrack.bind(this);\n    onDispose(this.#onDispose.bind(this));\n  }\n  #onAddTrack(event) {\n    const nativeTrack = event.track;\n    if (!nativeTrack || findTextTrackElement(this.#video, nativeTrack)) return;\n    const track = new TextTrack({\n      id: nativeTrack.id,\n      kind: nativeTrack.kind,\n      label: nativeTrack.label ?? \"\",\n      language: nativeTrack.language,\n      type: \"vtt\"\n    });\n    track[TextTrackSymbol.native] = { track: nativeTrack };\n    track[TextTrackSymbol.readyState] = 2;\n    track[TextTrackSymbol.nativeHLS] = true;\n    let lastIndex = 0;\n    const onCueChange = (event2) => {\n      if (!nativeTrack.cues) return;\n      for (let i = lastIndex; i < nativeTrack.cues.length; i++) {\n        track.addCue(nativeTrack.cues[i], event2);\n        lastIndex++;\n      }\n    };\n    onCueChange(event);\n    nativeTrack.oncuechange = onCueChange;\n    this.#ctx.textTracks.add(track, event);\n    track.setMode(nativeTrack.mode, event);\n  }\n  #onDispose() {\n    this.#video.textTracks.onaddtrack = null;\n    for (const track of this.#ctx.textTracks) {\n      const nativeTrack = track[TextTrackSymbol.native]?.track;\n      if (nativeTrack?.oncuechange) nativeTrack.oncuechange = null;\n    }\n  }\n}\nfunction findTextTrackElement(video, track) {\n  return Array.from(video.children).find((el) => el.track === track);\n}\n\nclass VideoPictureInPicture {\n  #video;\n  #media;\n  constructor(video, media) {\n    this.#video = video;\n    this.#media = media;\n    new EventsController(video).add(\"enterpictureinpicture\", this.#onEnter.bind(this)).add(\"leavepictureinpicture\", this.#onExit.bind(this));\n  }\n  get active() {\n    return document.pictureInPictureElement === this.#video;\n  }\n  get supported() {\n    return canUsePictureInPicture(this.#video);\n  }\n  async enter() {\n    return this.#video.requestPictureInPicture();\n  }\n  exit() {\n    return document.exitPictureInPicture();\n  }\n  #onEnter(event) {\n    this.#onChange(true, event);\n  }\n  #onExit(event) {\n    this.#onChange(false, event);\n  }\n  #onChange = (active, event) => {\n    this.#media.notify(\"picture-in-picture-change\", active, event);\n  };\n}\n\nclass VideoPresentation {\n  #video;\n  #media;\n  #mode = \"inline\";\n  get mode() {\n    return this.#mode;\n  }\n  constructor(video, media) {\n    this.#video = video;\n    this.#media = media;\n    listenEvent(video, \"webkitpresentationmodechanged\", this.#onModeChange.bind(this));\n  }\n  get supported() {\n    return canUseVideoPresentation(this.#video);\n  }\n  async setPresentationMode(mode) {\n    if (this.#mode === mode) return;\n    this.#video.webkitSetPresentationMode(mode);\n  }\n  #onModeChange(event) {\n    const prevMode = this.#mode;\n    this.#mode = this.#video.webkitPresentationMode;\n    this.#media.player?.dispatch(\n      new DOMEvent(\"video-presentation-change\", {\n        detail: this.#mode,\n        trigger: event\n      })\n    );\n    [\"fullscreen\", \"picture-in-picture\"].forEach((type) => {\n      if (this.#mode === type || prevMode === type) {\n        this.#media.notify(`${type}-change`, this.#mode === type, event);\n      }\n    });\n  }\n}\nclass FullscreenPresentationAdapter {\n  #presentation;\n  get active() {\n    return this.#presentation.mode === \"fullscreen\";\n  }\n  get supported() {\n    return this.#presentation.supported;\n  }\n  constructor(presentation) {\n    this.#presentation = presentation;\n  }\n  async enter() {\n    this.#presentation.setPresentationMode(\"fullscreen\");\n  }\n  async exit() {\n    this.#presentation.setPresentationMode(\"inline\");\n  }\n}\nclass PIPPresentationAdapter {\n  #presentation;\n  get active() {\n    return this.#presentation.mode === \"picture-in-picture\";\n  }\n  get supported() {\n    return this.#presentation.supported;\n  }\n  constructor(presentation) {\n    this.#presentation = presentation;\n  }\n  async enter() {\n    this.#presentation.setPresentationMode(\"picture-in-picture\");\n  }\n  async exit() {\n    this.#presentation.setPresentationMode(\"inline\");\n  }\n}\n\nclass VideoProvider extends HTMLMediaProvider {\n  $$PROVIDER_TYPE = \"VIDEO\";\n  get type() {\n    return \"video\";\n  }\n  airPlay;\n  fullscreen;\n  pictureInPicture;\n  constructor(video, ctx) {\n    super(video, ctx);\n    scoped(() => {\n      this.airPlay = new HTMLAirPlayAdapter(video, ctx);\n      if (canUseVideoPresentation(video)) {\n        const presentation = new VideoPresentation(video, ctx);\n        this.fullscreen = new FullscreenPresentationAdapter(presentation);\n        this.pictureInPicture = new PIPPresentationAdapter(presentation);\n      } else if (canUsePictureInPicture(video)) {\n        this.pictureInPicture = new VideoPictureInPicture(video, ctx);\n      }\n    }, this.scope);\n  }\n  setup() {\n    super.setup();\n    if (canPlayHLSNatively(this.video)) {\n      new NativeHLSTextTracks(this.video, this.ctx);\n    }\n    this.ctx.textRenderers.attachVideo(this.video);\n    onDispose(() => {\n      this.ctx.textRenderers.attachVideo(null);\n    });\n    if (this.type === \"video\") this.ctx.notify(\"provider-setup\", this);\n  }\n  /**\n   * The native HTML `<video>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement}\n   */\n  get video() {\n    return this.media;\n  }\n}\n\nexport { VideoProvider };\n"],"names":["NativeHLSTextTracks","constructor","video","ctx","this","textTracks","onaddtrack","bind","event","nativeTrack","track","Array","from","children","find","el","findTextTrackElement","id","kind","label","language","type","native","readyState","nativeHLS","lastIndex","onCueChange","event2","cues","i","length","addCue","oncuechange","add","setMode","mode","VideoPictureInPicture","media","active","document","pictureInPictureElement","supported","enter","requestPictureInPicture","exit","exitPictureInPicture","notify","VideoPresentation","setPresentationMode","webkitSetPresentationMode","prevMode","webkitPresentationMode","player","dispatch","detail","trigger","forEach","FullscreenPresentationAdapter","presentation","PIPPresentationAdapter","VideoProvider","$$PROVIDER_TYPE","airPlay","fullscreen","pictureInPicture","super","scope","setup","textRenderers","attachVideo"],"sourceRoot":""}