{"version":3,"file":"557.js","mappings":"2JAEA,MAAMA,EAAoB,CACxBC,EAAC,IACQ,IAAI,EAAAC,EAAW,CACpBC,KAAM,IAAeC,aACrBC,OAAQ,6BACRC,KAAM,IAGVC,EAAC,CAACC,EAAWF,IACJ,IAAI,EAAAJ,EAAW,CACpBC,KAAM,IAAeM,aACrBJ,OAAQ,yBAAyBG,0BAAkCF,IACnEA,SAGJI,EAAC,CAACC,EAASL,IACF,IAAI,EAAAJ,EAAW,CACpBC,KAAM,IAAeM,aACrBJ,OAAQ,uBAAuBM,0BAAgCL,IAC/DA,SAGJM,EAAC,CAACJ,EAAWG,EAASL,IACb,IAAI,EAAAJ,EAAW,CACpBC,KAAM,IAAeM,aACrBJ,OAAQ,uBAAuBM,+BAAqCH,eAAuBF,IAC3FA,SAGJO,EAAC,CAACC,EAAMC,EAAOT,IACN,IAAI,EAAAJ,EAAW,CACpBC,KAAM,IAAea,gBACrBX,OAAQ,mCAAmCS,eAAkBR,aAAgBS,KAC7ET,SAGJW,EAAC,CAACH,EAAMC,EAAOT,IACN,IAAI,EAAAJ,EAAW,CACpBC,KAAM,IAAee,eACrBb,OAAQ,yBAAyBS,eAAkBR,aAAgBS,KACnET,SAGJa,EAAC,CAACL,EAAMC,EAAOT,IACN,IAAI,EAAAJ,EAAW,CACpBC,KAAM,IAAea,gBACrBX,OAAQ,sCAAsCS,eAAkBR,aAAgBS,KAChFT,SAGJc,EAAC,CAACN,EAAMC,EAAOT,IACN,IAAI,EAAAJ,EAAW,CACpBC,KAAM,IAAee,eACrBb,OAAQ,4BAA4BS,eAAkBR,aAAgBS,KACtET,SAIJe,EAAC,CAACC,EAAMhB,IACC,IAAI,EAAAJ,EAAW,CACpBC,KAAM,IAAeoB,UACrBlB,OAAQ,wBAAwBiB,qBAAwBhB,IACxDA,S","sources":["webpack://rrze-video/./node_modules/media-captions/dist/prod/errors.js"],"sourcesContent":["import { P as ParseError, c as ParseErrorCode } from './index.js';\n\nconst ParseErrorBuilder = {\n  r() {\n    return new ParseError({\n      code: ParseErrorCode.BadSignature,\n      reason: \"missing WEBVTT file header\",\n      line: 1\n    });\n  },\n  s(startTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue start timestamp \\`${startTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  t(endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  u(startTime, endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is greater than start \\`${startTime}\\` on line ${line}`,\n      line\n    });\n  },\n  y(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  x(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  w(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  v(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  // SSA-specific errors\n  T(type, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadFormat,\n      reason: `format missing for \\`${type}\\` block on line ${line}`,\n      line\n    });\n  }\n};\n\nexport { ParseErrorBuilder };\n"],"names":["ParseErrorBuilder","r","P","code","BadSignature","reason","line","s","startTime","BadTimestamp","t","endTime","u","y","name","value","BadSettingValue","x","UnknownSetting","w","v","T","type","BadFormat"],"sourceRoot":""}