{"version":3,"file":"480.js","mappings":"gOAeA,MAAMA,EACJ,GACA,GACA,GAAY,KACZ,GAAgB,KAChBC,OAAS,CAAC,EACV,GAA6B,IAAIC,IACjC,YAAIC,GACF,OAAOC,MAAK,CACd,CACA,WAAAC,CAAYC,EAAOC,GACjBH,MAAK,EAASE,EACdF,MAAK,EAAOG,CACd,CACA,KAAAC,CAAMC,GACJ,MAAM,WAAEC,GAAeN,MAAK,EAAKO,OAC3BC,GAAS,QAAKF,GAAYG,SAAS,QAASC,GAAmB,QAAKJ,GAAYG,SAAS,OAC/FT,MAAK,EAAY,IAAIK,EAAK,CACxBM,eAAgBD,EAChBE,iBAAkBF,EAAmB,EAAIF,EAAS,OAAI,EACtDK,0BAA0B,KACvBb,KAAKH,SAEV,MAAMiB,EAAad,MAAK,EAAkBe,KAAKf,MAC/C,IAAK,MAAMgB,KAASC,OAAOC,OAAOb,EAAKc,QAASnB,MAAK,EAAUoB,GAAGJ,EAAOF,GACzEd,MAAK,EAAUoB,GAAGf,EAAKc,OAAOE,MAAOrB,MAAK,EAASe,KAAKf,OACxD,IAAK,MAAMsB,KAAYtB,MAAK,EAAYsB,EAAStB,MAAK,GACtDA,MAAK,EAAKuB,OAAOC,SAAS,eAAgB,CACxCC,OAAQzB,MAAK,IAEfA,MAAK,EAAU0B,YAAY1B,MAAK,GAChCA,MAAK,EAAUoB,GAAGf,EAAKc,OAAOQ,qBAAsB3B,MAAK,EAAee,KAAKf,OAC7EA,MAAK,EAAUoB,GAAGf,EAAKc,OAAOS,eAAgB5B,MAAK,EAAiBe,KAAKf,OACzEA,MAAK,EAAUoB,GAAGf,EAAKc,OAAOU,aAAc7B,MAAK,EAAee,KAAKf,OACrEA,MAAK,EAAUoB,GAAGf,EAAKc,OAAOW,6BAA8B9B,MAAK,EAAee,KAAKf,OACrFA,MAAK,EAAUoB,GAAGf,EAAKc,OAAOY,YAAa/B,MAAK,EAAce,KAAKf,OACnEA,MAAK,EAAKgC,UAAU,IAAcC,YAAcjC,MAAK,EAAmBe,KAAKf,OAC7E,QAAYA,MAAK,EAAKgC,UAAW,SAAUhC,MAAK,EAAqBe,KAAKf,QAC1E,QAAYA,MAAK,EAAKkC,YAAa,SAAUlC,MAAK,EAAmBe,KAAKf,OAC1EA,MAAK,GAAgB,QAAOA,MAAK,EAAUe,KAAKf,MAClD,CACA,GAAgBmC,EAAMC,GACpB,OAAO,IAAI,KA3CQ,CAACD,IAAS,QAAiBA,GA2C1BE,CAAeF,GAAO,CAAEV,OAAQW,GACtD,CACA,KACE,IAAKpC,MAAK,EAAKO,OAAO+B,OAAQ,OAC9B,MAAMC,EAAM,IAAI,IAAQvC,MAAK,EAAkBe,KAAKf,OAEpD,OADAuC,EAAIC,QACGD,EAAIE,KAAK1B,KAAKwB,EACvB,CACA,KACEvC,MAAK,EAAKO,OAAOmC,iBAAiBC,IAAI3C,MAAK,GAAW0C,kBAAoBE,IAC5E,CACA,GAAkBT,EAAMC,GACtBpC,MAAK,EAAKuB,QAAQC,SAASxB,MAAK,EAAgBmC,EAAMC,GACxD,CACA,GAAeS,EAAWT,GACxB,MAAMpB,EAAQhB,MAAK,EAAgB6C,EAAWT,GAC9C,IAAIU,GAAgB,EACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAAKY,OAAOC,OAAQF,IAAK,CAC3C,MAAMG,EAAiBd,EAAKY,OAAOD,GAAII,EAAOD,EAAeE,eAAiBF,EAAeG,eAAgBC,EAAQ,IAAI,KAAU,CACjIC,GAAI,OAAOL,EAAeM,QAAQT,IAClCU,IAAKN,GAAMO,IACXC,MAAOT,EAAeS,MACtBC,SAAUT,GAAMU,KAChBL,KAAMN,EAAeM,KACrBM,QAASZ,EAAeY,UAE1BR,EAAM,KAAgBS,YAAc,EACpCT,EAAM,KAAgBU,cAAgB,KACjB,YAAfV,EAAMW,MACRjE,MAAK,EAAUoD,cAAgBL,EAC/BD,EAAeC,GACND,IAAiBC,IAC1B/C,MAAK,EAAUoD,eAAiB,EAChCN,GAAgB,EAClB,EAEF9C,MAAK,EAAKkE,WAAWC,IAAIb,EAAOtC,EAClC,CACF,CACA,GAAc6B,EAAWT,GACvB,MAAMgC,EAAQpE,MAAK,GAAWoD,cAAeE,EAAQtD,MAAK,EAAKkE,WAAWG,QAAQ,OAAOjC,EAAKD,QAAQiC,KACtG,IAAKd,EAAO,OACZ,MAAMtC,EAAQhB,MAAK,EAAgB6C,EAAWT,GAC9C,IAAK,MAAMkC,KAAOlC,EAAKmC,KACrBD,EAAIE,cAAgB,OACpBlB,EAAMmB,OAAOH,EAAKtD,EAEtB,CACA,GAAe6B,EAAWT,GACxB,MAAMkB,EAAQtD,MAAK,EAAKkC,YAAYE,EAAKmB,IACzC,GAAID,EAAO,CACT,MAAMoB,EAAU1E,MAAK,EAAgB6C,EAAWT,GAChDpC,MAAK,EAAKkC,YAAY,IAAWyC,QAAQrB,GAAO,EAAMoB,EACxD,CACF,CACA,GAAiB7B,EAAWT,GAC1B,MAAMwC,EAAU5E,MAAK,EAAKgC,UAAUI,EAAKyC,OACzC,GAAID,EAAS,CACX,MAAMF,EAAU1E,MAAK,EAAgB6C,EAAWT,GAChDpC,MAAK,EAAKgC,UAAU,IAAW2C,QAAQC,GAAS,EAAMF,EACxD,CACF,CACA,GAAe7B,EAAWT,GACxB,GAAIpC,MAAK,EAAKO,OAAOuE,UAAW,OAChC,MAAM,KAAE3C,EAAI,KAAEG,EAAMyC,cAAeC,EAAQ,eAAEC,GAAmB7C,EAAK8C,QAASR,EAAU1E,MAAK,EAAgB6C,EAAWT,GACxHpC,MAAK,EAAKmF,OACR,qBACA7C,EAAgB,UAATH,GAAoBiD,OAAOC,SAASL,IAAaC,GAAkB,GAAK,WAAa,OAAS,YACrGP,GAEF1E,MAAK,EAAKmF,OAAO,kBAAmBH,EAAUN,GAC9C,MAAMY,EAAQtF,MAAK,EAAUsF,OACQ,IAAjCtF,MAAK,EAAUuF,cACjBvF,MAAK,EAAKgC,UAAU,IAAcwD,UAAS,EAAMd,GAEnD,IAAK,MAAMe,KAAezF,MAAK,EAAUkC,YAAa,CACpD,MAAMwD,EAAa,CACjBnC,GAAIkC,EAAYlC,GAAGoC,WACnBhC,MAAO8B,EAAYG,KACnBhC,SAAU6B,EAAY5B,MAAQ,GAC9BL,KAAM,QAERxD,MAAK,EAAKkC,YAAY,IAAWiC,KAAKuB,EAAYhB,EACpD,CACA,IAAK,MAAMG,KAAS7E,MAAK,EAAU6F,OAAQ,CACzC,MAAMC,EAAe,CACnBvC,GAAIsB,EAAMtB,IAAIoC,YAAcd,EAAMkB,OAAS,IAC3CC,MAAOnB,EAAMmB,MACbD,OAAQlB,EAAMkB,OACdE,MAAOpB,EAAMqB,SACbC,QAAStB,EAAMsB,SAEjBnG,MAAK,EAAKgC,UAAU,IAAWmC,KAAK2B,EAAcpB,EACpD,CACAY,EAAMc,cAAc,IAAI,KAAS,UAAW,CAAE1B,YAChD,CACA,GAAS7B,EAAWT,GACdA,EAAKiE,QAEA,eADCjE,EAAKD,KAETnC,MAAK,GAAWsG,oBAGhBtG,MAAK,EAAcoC,EAAKmE,OAIhC,CACA,GAAcA,GACZvG,MAAK,EAAKmF,OAAO,QAAS,CACxBqB,QAASD,EAAMC,QACfC,KAAM,EACNF,SAEJ,CACA,KACMvG,MAAK,IAAWA,MAAK,EAAUuF,cAAgB,EACrD,CACA,KACE,MAAM,UAAEvD,GAAchC,MAAK,EACtBA,MAAK,IAAagC,EAAU0E,OACjC1G,MAAK,EAAUgC,EAAU2E,OAAS,SAAW3E,EAAU4E,cACnD,OACF5G,MAAK,EAAO6G,YAAc7G,MAAK,EAAO6G,aAE1C,CACA,KACE,MAAM,YAAE3E,GAAgBlC,MAAK,EACzBA,MAAK,GAAaA,MAAK,EAAU8G,aAAe5E,EAAY0E,gBAC9D5G,MAAK,EAAU8G,WAAa5E,EAAY0E,cAE5C,CACA,UAAAG,CAAWzF,GAET,OADAtB,MAAK,EAAWmE,IAAI7C,GACb,IAAMtB,MAAK,EAAWgH,OAAO1F,EACtC,CACA,UAAA2F,CAAWxD,IACJ,QAASA,EAAIA,MAClBzD,MAAK,GAAWiH,WAAWxD,EAAIA,IACjC,CACA,OAAAyD,GACElH,MAAK,GAAWkH,UAChBlH,MAAK,EAAY,KACjBA,MAAK,MACLA,MAAK,EAAgB,IACvB,EAGF,MAAMmH,EACJ,GACA,GACA,GACA,WAAAlH,CAAYmH,EAAKjH,EAAKmB,GACpBtB,MAAK,EAAOoH,EACZpH,MAAK,EAAOG,EACZH,MAAK,EAAYsB,EACjBtB,MAAK,GACP,CACA,OAAM,GACJ,MAAMqH,EAAY,CAChBC,YAAatH,MAAK,EAAae,KAAKf,MACpCuH,SAAUvH,MAAK,EAAUe,KAAKf,MAC9BwH,YAAaxH,MAAK,EAAae,KAAKf,OAEtC,IAAIK,QA0DRoH,eAA6BhE,EAAK4D,EAAY,CAAC,GAC7C,IAAK,QAAS5D,GAAd,CACA4D,EAAUC,gBACV,IAEE,SADM,QAAW7D,KACZ,QAAWiE,OAAOC,KACrB,MAAMC,MAC+F,IAGvG,MAAMvH,EAAOqH,OAAOC,IAEpB,OADAN,EAAUE,WAAWlH,GACdA,CACT,CAAE,MAAOwH,GACPR,EAAUG,cAAcK,EAC1B,CAdiC,CAgBnC,CA3EqBC,CAAc9H,MAAK,EAAMqH,GAE1C,IADI,QAAYhH,MAAU,QAASL,MAAK,KAAOK,QAmCnDoH,eAAyBM,EAAQV,EAAY,CAAC,GAC5C,KAAI,QAAYU,GAAhB,CAEA,GADAV,EAAUC,gBACNS,EAAOC,WAAaD,EAAOC,YAAcC,SAE3C,OADAZ,EAAUE,WAAWQ,GACdA,EAET,IACE,MAAM1H,SAAc0H,MAAWjE,QAC/B,IAAIzD,IAAUA,EAAK6H,YAGjB,MAAMN,MAC2F,IAGnG,OANEP,EAAUE,WAAWlH,GAMhBA,CACT,CAAE,MAAOwH,GACPR,EAAUG,cAAcK,EAC1B,CAlBsC,CAoBxC,CAxDgEM,CAAUnI,MAAK,EAAMqH,KAC5EhH,EAAM,OAAO,KAClB,IAAKA,EAAK6H,cAAe,CACvB,MAAM1B,EAAU,2DAGhB,OAFAxG,MAAK,EAAKuB,OAAOC,SAAS,IAAI,KAAS,oBACvCxB,MAAK,EAAKmF,OAAO,QAAS,CAAEqB,UAASC,KAAM,IACpC,IACT,CACA,OAAOpG,CACT,CACA,KACEL,MAAK,EAAKuB,OAAOC,SAAS,IAAI,KAAS,sBACzC,CACA,GAAUnB,GACRL,MAAK,EAAKuB,OAAOC,SACf,IAAI,KAAS,iBAAkB,CAC7BC,OAAQpB,KAGZL,MAAK,EAAUK,EACjB,CACA,GAAa+H,GACX,MAAM7B,GAAQ,OAAc6B,GAC5BpI,MAAK,EAAKuB,OAAOC,SACf,IAAI,KAAS,qBAAsB,CACjCC,OAAQ8E,KAGZvG,MAAK,EAAKmF,OAAO,QAAS,CACxBqB,QAASD,EAAMC,QACfC,KAAM,EACNF,SAEJ,EA4CF,MAAM8B,UAAoB,EAAAC,cACxBC,gBAAkB,MAClB,GAAQ,KACR,GAAc,IAAI3I,EAAcI,KAAKE,MAAOF,KAAKG,KAIjD,QAAIE,GACF,OAAOL,MAAK,CACd,CAIA,YAAID,GACF,OAAOC,MAAK,EAAYD,QAC1B,CAIAyI,kBAAmB,UACnB,QAAIrG,GACF,MAAO,KACT,CACA,eAAIsG,GACF,OAAO,CACT,CACA,GAAW,6DAMX,UAAI5I,GACF,OAAOG,MAAK,EAAYH,MAC1B,CACA,UAAIA,CAAOA,GACTG,MAAK,EAAYH,OAASA,CAC5B,CAMA,WAAI6I,GACF,OAAO1I,MAAK,CACd,CACA,WAAI0I,CAAQA,GACV1I,MAAK,EAAW0I,CAClB,CACA,UAAAC,IACO,QAAS3I,MAAK,KACnB,QAAWA,MAAK,EAClB,CACA,KAAAI,GACEwI,MAAMxI,QACN,IAAI+G,EAAanH,MAAK,EAAUA,KAAKG,KAAME,IACzCL,MAAK,EAAQK,EACbL,MAAK,EAAYI,MAAMC,GACvBL,KAAKG,IAAIgF,OAAO,iBAAkBnF,MAClC,MAAMyD,GAAM,QAAKzD,KAAKG,IAAII,OAAOsI,QAC7BpF,GAAKzD,KAAKiH,WAAWxD,EAAI,GAEjC,CACA,gBAAMwD,CAAWxD,EAAKqF,IACf,QAASrF,EAAIA,MAIlBzD,KAAKsF,MAAMwD,QAAUA,GAAW,GAChC9I,KAAK+I,aAAatF,EAAK,yBACvBzD,MAAK,EAAYiH,WAAWxD,GAC5BzD,KAAKgJ,WAAavF,GANhBzD,KAAKiJ,cAOT,CAKA,UAAAlC,CAAWzF,GACT,MAAMvB,EAAWC,MAAK,EAAYD,SAElC,OADIA,GAAUuB,EAASvB,GAChBC,MAAK,EAAY+G,WAAWzF,EACrC,CACA,OAAA4F,GACElH,MAAK,EAAYkH,SACnB,E,qGCpXF,MAAMgC,EACJ,GACA,GACA,WAAAjJ,CAAYC,EAAOC,GACjBH,MAAK,EAASE,EACdF,MAAK,EAAOG,EACZD,EAAMgE,WAAWiF,WAAanJ,MAAK,EAAYe,KAAKf,OACpD,QAAUA,MAAK,EAAWe,KAAKf,MACjC,CACA,GAAYgB,GACV,MAAMoI,EAAcpI,EAAMsC,MAC1B,IAAK8F,GAgCT,SAA8BlJ,EAAOoD,GACnC,OAAO+F,MAAMC,KAAKpJ,EAAMqJ,UAAUC,MAAMC,GAAOA,EAAGnG,QAAUA,GAC9D,CAlCwBoG,CAAqB1J,MAAK,EAAQoJ,GAAc,OACpE,MAAM9F,EAAQ,IAAI,KAAU,CAC1BC,GAAI6F,EAAY7F,GAChBC,KAAM4F,EAAY5F,KAClBG,MAAOyF,EAAYzF,OAAS,GAC5BC,SAAUwF,EAAYxF,SACtBzB,KAAM,QAERmB,EAAM,KAAgBqG,QAAU,CAAErG,MAAO8F,GACzC9F,EAAM,KAAgBS,YAAc,EACpCT,EAAM,KAAgBsG,YAAa,EACnC,IAAIC,EAAY,EAChB,MAAMC,EAAeC,IACnB,GAAKX,EAAY7E,KACjB,IAAK,IAAIxB,EAAI8G,EAAW9G,EAAIqG,EAAY7E,KAAKtB,OAAQF,IACnDO,EAAMmB,OAAO2E,EAAY7E,KAAKxB,GAAIgH,GAClCF,GACF,EAEFC,EAAY9I,GACZoI,EAAYY,YAAcF,EAC1B9J,MAAK,EAAKkE,WAAWC,IAAIb,EAAOtC,GAChCsC,EAAM2G,QAAQb,EAAYnF,KAAMjD,EAClC,CACA,KACEhB,MAAK,EAAOkE,WAAWiF,WAAa,KACpC,IAAK,MAAM7F,KAAStD,MAAK,EAAKkE,WAAY,CACxC,MAAMkF,EAAc9F,EAAM,KAAgBqG,SAASrG,MAC/C8F,GAAaY,cAAaZ,EAAYY,YAAc,KAC1D,CACF,EAMF,MAAME,EACJ,GACA,GACA,WAAAjK,CAAYC,EAAOoF,GACjBtF,MAAK,EAASE,EACdF,MAAK,EAASsF,EACd,IAAI,KAAiBpF,GAAOiE,IAAI,wBAAyBnE,MAAK,EAASe,KAAKf,OAAOmE,IAAI,wBAAyBnE,MAAK,EAAQe,KAAKf,MACpI,CACA,UAAImK,GACF,OAAOC,SAASC,0BAA4BrK,MAAK,CACnD,CACA,aAAIsK,GACF,OAAO,QAAuBtK,MAAK,EACrC,CACA,WAAMuK,GACJ,OAAOvK,MAAK,EAAOwK,yBACrB,CACA,IAAAC,GACE,OAAOL,SAASM,sBAClB,CACA,GAAS1J,GACPhB,MAAK,GAAU,EAAMgB,EACvB,CACA,GAAQA,GACNhB,MAAK,GAAU,EAAOgB,EACxB,CACA,GAAY,CAACmJ,EAAQnJ,KACnBhB,MAAK,EAAOmF,OAAO,4BAA6BgF,EAAQnJ,EAAM,EAIlE,MAAM2J,EACJ,GACA,GACA,GAAQ,SACR,QAAI1G,GACF,OAAOjE,MAAK,CACd,CACA,WAAAC,CAAYC,EAAOoF,GACjBtF,MAAK,EAASE,EACdF,MAAK,EAASsF,GACd,QAAYpF,EAAO,gCAAiCF,MAAK,EAAce,KAAKf,MAC9E,CACA,aAAIsK,GACF,OAAO,QAAwBtK,MAAK,EACtC,CACA,yBAAM4K,CAAoB3G,GACpBjE,MAAK,IAAUiE,GACnBjE,MAAK,EAAO6K,0BAA0B5G,EACxC,CACA,GAAcjD,GACZ,MAAM8J,EAAW9K,MAAK,EACtBA,MAAK,EAAQA,MAAK,EAAO+K,uBACzB/K,MAAK,EAAOuB,QAAQC,SAClB,IAAI,KAAS,4BAA6B,CACxCC,OAAQzB,MAAK,EACb0E,QAAS1D,KAGb,CAAC,aAAc,sBAAsBgK,SAAS7I,IACxCnC,MAAK,IAAUmC,GAAQ2I,IAAa3I,GACtCnC,MAAK,EAAOmF,OAAO,GAAGhD,WAAenC,MAAK,IAAUmC,EAAMnB,EAC5D,GAEJ,EAEF,MAAMiK,EACJ,GACA,UAAId,GACF,MAAmC,eAA5BnK,MAAK,EAAciE,IAC5B,CACA,aAAIqG,GACF,OAAOtK,MAAK,EAAcsK,SAC5B,CACA,WAAArK,CAAYiL,GACVlL,MAAK,EAAgBkL,CACvB,CACA,WAAMX,GACJvK,MAAK,EAAc4K,oBAAoB,aACzC,CACA,UAAMH,GACJzK,MAAK,EAAc4K,oBAAoB,SACzC,EAEF,MAAMO,EACJ,GACA,UAAIhB,GACF,MAAmC,uBAA5BnK,MAAK,EAAciE,IAC5B,CACA,aAAIqG,GACF,OAAOtK,MAAK,EAAcsK,SAC5B,CACA,WAAArK,CAAYiL,GACVlL,MAAK,EAAgBkL,CACvB,CACA,WAAMX,GACJvK,MAAK,EAAc4K,oBAAoB,qBACzC,CACA,UAAMH,GACJzK,MAAK,EAAc4K,oBAAoB,SACzC,EAGF,MAAMtC,UAAsB,IAC1BC,gBAAkB,QAClB,QAAIpG,GACF,MAAO,OACT,CACAiJ,QACAC,WACAC,iBACA,WAAArL,CAAYC,EAAOC,GACjByI,MAAM1I,EAAOC,IACb,SAAO,KAEL,GADAH,KAAKoL,QAAU,IAAI,IAAmBlL,EAAOC,IACzC,QAAwBD,GAAQ,CAClC,MAAMgL,EAAe,IAAIP,EAAkBzK,EAAOC,GAClDH,KAAKqL,WAAa,IAAIJ,EAA8BC,GACpDlL,KAAKsL,iBAAmB,IAAIH,EAAuBD,EACrD,MAAW,QAAuBhL,KAChCF,KAAKsL,iBAAmB,IAAIpB,EAAsBhK,EAAOC,GAC3D,GACCH,KAAKuL,MACV,CACA,KAAAnL,GACEwI,MAAMxI,SACF,QAAmBJ,KAAKE,QAC1B,IAAIgJ,EAAoBlJ,KAAKE,MAAOF,KAAKG,KAE3CH,KAAKG,IAAIqL,cAAcC,YAAYzL,KAAKE,QACxC,SAAU,KACRF,KAAKG,IAAIqL,cAAcC,YAAY,KAAK,IAExB,UAAdzL,KAAKmC,MAAkBnC,KAAKG,IAAIgF,OAAO,iBAAkBnF,KAC/D,CAMA,SAAIE,GACF,OAAOF,KAAKsF,KACd,E","sources":["webpack://rrze-video/./node_modules/vidstack/prod/providers/vidstack-hls.js","webpack://rrze-video/./node_modules/vidstack/prod/providers/vidstack-video.js"],"sourcesContent":["import { loadScript, preconnect } from '../chunks/vidstack-CSpLxgg_.js';\nimport { IS_CHROME, isHLSSupported } from '../chunks/vidstack-C1T0MO0v.js';\nimport { VideoProvider } from './vidstack-video.js';\nimport { peek, listenEvent, effect, DOMEvent, isString, camelToKebabCase, isUndefined, isFunction } from '../chunks/vidstack-CRlI3Mh7.js';\nimport { QualitySymbol } from '../chunks/vidstack-B01xzxC4.js';\nimport { TextTrack, TextTrackSymbol } from '../chunks/vidstack-DpjEe5xw.js';\nimport { ListSymbol } from '../chunks/vidstack-D5EzK014.js';\nimport { RAFLoop } from '../chunks/vidstack-DSYpsFWk.js';\nimport { coerceToError } from '../chunks/vidstack-C9vIqaYT.js';\nimport './vidstack-html.js';\nimport '../chunks/vidstack-Dihypf8P.js';\nimport '../chunks/vidstack-CQ0j0noX.js';\nimport '../chunks/vidstack-DE4XvkHU.js';\n\nconst toDOMEventType = (type) => camelToKebabCase(type);\nclass HLSController {\n  #video;\n  #ctx;\n  #instance = null;\n  #stopLiveSync = null;\n  config = {};\n  #callbacks = /* @__PURE__ */ new Set();\n  get instance() {\n    return this.#instance;\n  }\n  constructor(video, ctx) {\n    this.#video = video;\n    this.#ctx = ctx;\n  }\n  setup(ctor) {\n    const { streamType } = this.#ctx.$state;\n    const isLive = peek(streamType).includes(\"live\"), isLiveLowLatency = peek(streamType).includes(\"ll-\");\n    this.#instance = new ctor({\n      lowLatencyMode: isLiveLowLatency,\n      backBufferLength: isLiveLowLatency ? 4 : isLive ? 8 : void 0,\n      renderTextTracksNatively: false,\n      ...this.config\n    });\n    const dispatcher = this.#dispatchHLSEvent.bind(this);\n    for (const event of Object.values(ctor.Events)) this.#instance.on(event, dispatcher);\n    this.#instance.on(ctor.Events.ERROR, this.#onError.bind(this));\n    for (const callback of this.#callbacks) callback(this.#instance);\n    this.#ctx.player.dispatch(\"hls-instance\", {\n      detail: this.#instance\n    });\n    this.#instance.attachMedia(this.#video);\n    this.#instance.on(ctor.Events.AUDIO_TRACK_SWITCHED, this.#onAudioSwitch.bind(this));\n    this.#instance.on(ctor.Events.LEVEL_SWITCHED, this.#onLevelSwitched.bind(this));\n    this.#instance.on(ctor.Events.LEVEL_LOADED, this.#onLevelLoaded.bind(this));\n    this.#instance.on(ctor.Events.NON_NATIVE_TEXT_TRACKS_FOUND, this.#onTracksFound.bind(this));\n    this.#instance.on(ctor.Events.CUES_PARSED, this.#onCuesParsed.bind(this));\n    this.#ctx.qualities[QualitySymbol.enableAuto] = this.#enableAutoQuality.bind(this);\n    listenEvent(this.#ctx.qualities, \"change\", this.#onUserQualityChange.bind(this));\n    listenEvent(this.#ctx.audioTracks, \"change\", this.#onUserAudioChange.bind(this));\n    this.#stopLiveSync = effect(this.#liveSync.bind(this));\n  }\n  #createDOMEvent(type, data) {\n    return new DOMEvent(toDOMEventType(type), { detail: data });\n  }\n  #liveSync() {\n    if (!this.#ctx.$state.live()) return;\n    const raf = new RAFLoop(this.#liveSyncPosition.bind(this));\n    raf.start();\n    return raf.stop.bind(raf);\n  }\n  #liveSyncPosition() {\n    this.#ctx.$state.liveSyncPosition.set(this.#instance?.liveSyncPosition ?? Infinity);\n  }\n  #dispatchHLSEvent(type, data) {\n    this.#ctx.player?.dispatch(this.#createDOMEvent(type, data));\n  }\n  #onTracksFound(eventType, data) {\n    const event = this.#createDOMEvent(eventType, data);\n    let currentTrack = -1;\n    for (let i = 0; i < data.tracks.length; i++) {\n      const nonNativeTrack = data.tracks[i], init = nonNativeTrack.subtitleTrack ?? nonNativeTrack.closedCaptions, track = new TextTrack({\n        id: `hls-${nonNativeTrack.kind}-${i}`,\n        src: init?.url,\n        label: nonNativeTrack.label,\n        language: init?.lang,\n        kind: nonNativeTrack.kind,\n        default: nonNativeTrack.default\n      });\n      track[TextTrackSymbol.readyState] = 2;\n      track[TextTrackSymbol.onModeChange] = () => {\n        if (track.mode === \"showing\") {\n          this.#instance.subtitleTrack = i;\n          currentTrack = i;\n        } else if (currentTrack === i) {\n          this.#instance.subtitleTrack = -1;\n          currentTrack = -1;\n        }\n      };\n      this.#ctx.textTracks.add(track, event);\n    }\n  }\n  #onCuesParsed(eventType, data) {\n    const index = this.#instance?.subtitleTrack, track = this.#ctx.textTracks.getById(`hls-${data.type}-${index}`);\n    if (!track) return;\n    const event = this.#createDOMEvent(eventType, data);\n    for (const cue of data.cues) {\n      cue.positionAlign = \"auto\";\n      track.addCue(cue, event);\n    }\n  }\n  #onAudioSwitch(eventType, data) {\n    const track = this.#ctx.audioTracks[data.id];\n    if (track) {\n      const trigger = this.#createDOMEvent(eventType, data);\n      this.#ctx.audioTracks[ListSymbol.select](track, true, trigger);\n    }\n  }\n  #onLevelSwitched(eventType, data) {\n    const quality = this.#ctx.qualities[data.level];\n    if (quality) {\n      const trigger = this.#createDOMEvent(eventType, data);\n      this.#ctx.qualities[ListSymbol.select](quality, true, trigger);\n    }\n  }\n  #onLevelLoaded(eventType, data) {\n    if (this.#ctx.$state.canPlay()) return;\n    const { type, live, totalduration: duration, targetduration } = data.details, trigger = this.#createDOMEvent(eventType, data);\n    this.#ctx.notify(\n      \"stream-type-change\",\n      live ? type === \"EVENT\" && Number.isFinite(duration) && targetduration >= 10 ? \"live:dvr\" : \"live\" : \"on-demand\",\n      trigger\n    );\n    this.#ctx.notify(\"duration-change\", duration, trigger);\n    const media = this.#instance.media;\n    if (this.#instance.currentLevel === -1) {\n      this.#ctx.qualities[QualitySymbol.setAuto](true, trigger);\n    }\n    for (const remoteTrack of this.#instance.audioTracks) {\n      const localTrack = {\n        id: remoteTrack.id.toString(),\n        label: remoteTrack.name,\n        language: remoteTrack.lang || \"\",\n        kind: \"main\"\n      };\n      this.#ctx.audioTracks[ListSymbol.add](localTrack, trigger);\n    }\n    for (const level of this.#instance.levels) {\n      const videoQuality = {\n        id: level.id?.toString() ?? level.height + \"p\",\n        width: level.width,\n        height: level.height,\n        codec: level.codecSet,\n        bitrate: level.bitrate\n      };\n      this.#ctx.qualities[ListSymbol.add](videoQuality, trigger);\n    }\n    media.dispatchEvent(new DOMEvent(\"canplay\", { trigger }));\n  }\n  #onError(eventType, data) {\n    if (data.fatal) {\n      switch (data.type) {\n        case \"mediaError\":\n          this.#instance?.recoverMediaError();\n          break;\n        default:\n          this.#onFatalError(data.error);\n          break;\n      }\n    }\n  }\n  #onFatalError(error) {\n    this.#ctx.notify(\"error\", {\n      message: error.message,\n      code: 1,\n      error\n    });\n  }\n  #enableAutoQuality() {\n    if (this.#instance) this.#instance.currentLevel = -1;\n  }\n  #onUserQualityChange() {\n    const { qualities } = this.#ctx;\n    if (!this.#instance || qualities.auto) return;\n    this.#instance[qualities.switch + \"Level\"] = qualities.selectedIndex;\n    if (IS_CHROME) {\n      this.#video.currentTime = this.#video.currentTime;\n    }\n  }\n  #onUserAudioChange() {\n    const { audioTracks } = this.#ctx;\n    if (this.#instance && this.#instance.audioTrack !== audioTracks.selectedIndex) {\n      this.#instance.audioTrack = audioTracks.selectedIndex;\n    }\n  }\n  onInstance(callback) {\n    this.#callbacks.add(callback);\n    return () => this.#callbacks.delete(callback);\n  }\n  loadSource(src) {\n    if (!isString(src.src)) return;\n    this.#instance?.loadSource(src.src);\n  }\n  destroy() {\n    this.#instance?.destroy();\n    this.#instance = null;\n    this.#stopLiveSync?.();\n    this.#stopLiveSync = null;\n  }\n}\n\nclass HLSLibLoader {\n  #lib;\n  #ctx;\n  #callback;\n  constructor(lib, ctx, callback) {\n    this.#lib = lib;\n    this.#ctx = ctx;\n    this.#callback = callback;\n    this.#startLoading();\n  }\n  async #startLoading() {\n    const callbacks = {\n      onLoadStart: this.#onLoadStart.bind(this),\n      onLoaded: this.#onLoaded.bind(this),\n      onLoadError: this.#onLoadError.bind(this)\n    };\n    let ctor = await loadHLSScript(this.#lib, callbacks);\n    if (isUndefined(ctor) && !isString(this.#lib)) ctor = await importHLS(this.#lib, callbacks);\n    if (!ctor) return null;\n    if (!ctor.isSupported()) {\n      const message = \"[vidstack] `hls.js` is not supported in this environment\";\n      this.#ctx.player.dispatch(new DOMEvent(\"hls-unsupported\"));\n      this.#ctx.notify(\"error\", { message, code: 4 });\n      return null;\n    }\n    return ctor;\n  }\n  #onLoadStart() {\n    this.#ctx.player.dispatch(new DOMEvent(\"hls-lib-load-start\"));\n  }\n  #onLoaded(ctor) {\n    this.#ctx.player.dispatch(\n      new DOMEvent(\"hls-lib-loaded\", {\n        detail: ctor\n      })\n    );\n    this.#callback(ctor);\n  }\n  #onLoadError(e) {\n    const error = coerceToError(e);\n    this.#ctx.player.dispatch(\n      new DOMEvent(\"hls-lib-load-error\", {\n        detail: error\n      })\n    );\n    this.#ctx.notify(\"error\", {\n      message: error.message,\n      code: 4,\n      error\n    });\n  }\n}\nasync function importHLS(loader, callbacks = {}) {\n  if (isUndefined(loader)) return void 0;\n  callbacks.onLoadStart?.();\n  if (loader.prototype && loader.prototype !== Function) {\n    callbacks.onLoaded?.(loader);\n    return loader;\n  }\n  try {\n    const ctor = (await loader())?.default;\n    if (ctor && !!ctor.isSupported) {\n      callbacks.onLoaded?.(ctor);\n    } else {\n      throw Error(\n        false ? \"[vidstack] failed importing `hls.js`. Dynamic import returned invalid constructor.\" : \"\"\n      );\n    }\n    return ctor;\n  } catch (err) {\n    callbacks.onLoadError?.(err);\n  }\n  return void 0;\n}\nasync function loadHLSScript(src, callbacks = {}) {\n  if (!isString(src)) return void 0;\n  callbacks.onLoadStart?.();\n  try {\n    await loadScript(src);\n    if (!isFunction(window.Hls)) {\n      throw Error(\n        false ? \"[vidstack] failed loading `hls.js`. Could not find a valid `Hls` constructor on window\" : \"\"\n      );\n    }\n    const ctor = window.Hls;\n    callbacks.onLoaded?.(ctor);\n    return ctor;\n  } catch (err) {\n    callbacks.onLoadError?.(err);\n  }\n  return void 0;\n}\n\nconst JS_DELIVR_CDN = \"https://cdn.jsdelivr.net\";\nclass HLSProvider extends VideoProvider {\n  $$PROVIDER_TYPE = \"HLS\";\n  #ctor = null;\n  #controller = new HLSController(this.video, this.ctx);\n  /**\n   * The `hls.js` constructor.\n   */\n  get ctor() {\n    return this.#ctor;\n  }\n  /**\n   * The current `hls.js` instance.\n   */\n  get instance() {\n    return this.#controller.instance;\n  }\n  /**\n   * Whether `hls.js` is supported in this environment.\n   */\n  static supported = isHLSSupported();\n  get type() {\n    return \"hls\";\n  }\n  get canLiveSync() {\n    return true;\n  }\n  #library = `${JS_DELIVR_CDN}/npm/hls.js@^1.5.0/dist/hls${\".min.js\"}`;\n  /**\n   * The `hls.js` configuration object.\n   *\n   * @see {@link https://github.com/video-dev/hls.js/blob/master/docs/API.md#fine-tuning}\n   */\n  get config() {\n    return this.#controller.config;\n  }\n  set config(config) {\n    this.#controller.config = config;\n  }\n  /**\n   * The `hls.js` constructor (supports dynamic imports) or a URL of where it can be found.\n   *\n   * @defaultValue `https://cdn.jsdelivr.net/npm/hls.js@^1.0.0/dist/hls.min.js`\n   */\n  get library() {\n    return this.#library;\n  }\n  set library(library) {\n    this.#library = library;\n  }\n  preconnect() {\n    if (!isString(this.#library)) return;\n    preconnect(this.#library);\n  }\n  setup() {\n    super.setup();\n    new HLSLibLoader(this.#library, this.ctx, (ctor) => {\n      this.#ctor = ctor;\n      this.#controller.setup(ctor);\n      this.ctx.notify(\"provider-setup\", this);\n      const src = peek(this.ctx.$state.source);\n      if (src) this.loadSource(src);\n    });\n  }\n  async loadSource(src, preload) {\n    if (!isString(src.src)) {\n      this.removeSource();\n      return;\n    }\n    this.media.preload = preload || \"\";\n    this.appendSource(src, \"application/x-mpegurl\");\n    this.#controller.loadSource(src);\n    this.currentSrc = src;\n  }\n  /**\n   * The given callback is invoked when a new `hls.js` instance is created and right before it's\n   * attached to media.\n   */\n  onInstance(callback) {\n    const instance = this.#controller.instance;\n    if (instance) callback(instance);\n    return this.#controller.onInstance(callback);\n  }\n  destroy() {\n    this.#controller.destroy();\n  }\n}\n\nexport { HLSProvider };\n","import { onDispose, EventsController, listenEvent, DOMEvent, scoped } from '../chunks/vidstack-CRlI3Mh7.js';\nimport { canUsePictureInPicture, canUseVideoPresentation, canPlayHLSNatively } from '../chunks/vidstack-C1T0MO0v.js';\nimport { HTMLMediaProvider } from './vidstack-html.js';\nimport { HTMLAirPlayAdapter } from '../chunks/vidstack-CQ0j0noX.js';\nimport { TextTrack, TextTrackSymbol } from '../chunks/vidstack-DpjEe5xw.js';\nimport '../chunks/vidstack-DSYpsFWk.js';\nimport '../chunks/vidstack-Dihypf8P.js';\nimport '../chunks/vidstack-D5EzK014.js';\nimport '../chunks/vidstack-CSpLxgg_.js';\nimport '../chunks/vidstack-DE4XvkHU.js';\n\nclass NativeHLSTextTracks {\n  #video;\n  #ctx;\n  constructor(video, ctx) {\n    this.#video = video;\n    this.#ctx = ctx;\n    video.textTracks.onaddtrack = this.#onAddTrack.bind(this);\n    onDispose(this.#onDispose.bind(this));\n  }\n  #onAddTrack(event) {\n    const nativeTrack = event.track;\n    if (!nativeTrack || findTextTrackElement(this.#video, nativeTrack)) return;\n    const track = new TextTrack({\n      id: nativeTrack.id,\n      kind: nativeTrack.kind,\n      label: nativeTrack.label ?? \"\",\n      language: nativeTrack.language,\n      type: \"vtt\"\n    });\n    track[TextTrackSymbol.native] = { track: nativeTrack };\n    track[TextTrackSymbol.readyState] = 2;\n    track[TextTrackSymbol.nativeHLS] = true;\n    let lastIndex = 0;\n    const onCueChange = (event2) => {\n      if (!nativeTrack.cues) return;\n      for (let i = lastIndex; i < nativeTrack.cues.length; i++) {\n        track.addCue(nativeTrack.cues[i], event2);\n        lastIndex++;\n      }\n    };\n    onCueChange(event);\n    nativeTrack.oncuechange = onCueChange;\n    this.#ctx.textTracks.add(track, event);\n    track.setMode(nativeTrack.mode, event);\n  }\n  #onDispose() {\n    this.#video.textTracks.onaddtrack = null;\n    for (const track of this.#ctx.textTracks) {\n      const nativeTrack = track[TextTrackSymbol.native]?.track;\n      if (nativeTrack?.oncuechange) nativeTrack.oncuechange = null;\n    }\n  }\n}\nfunction findTextTrackElement(video, track) {\n  return Array.from(video.children).find((el) => el.track === track);\n}\n\nclass VideoPictureInPicture {\n  #video;\n  #media;\n  constructor(video, media) {\n    this.#video = video;\n    this.#media = media;\n    new EventsController(video).add(\"enterpictureinpicture\", this.#onEnter.bind(this)).add(\"leavepictureinpicture\", this.#onExit.bind(this));\n  }\n  get active() {\n    return document.pictureInPictureElement === this.#video;\n  }\n  get supported() {\n    return canUsePictureInPicture(this.#video);\n  }\n  async enter() {\n    return this.#video.requestPictureInPicture();\n  }\n  exit() {\n    return document.exitPictureInPicture();\n  }\n  #onEnter(event) {\n    this.#onChange(true, event);\n  }\n  #onExit(event) {\n    this.#onChange(false, event);\n  }\n  #onChange = (active, event) => {\n    this.#media.notify(\"picture-in-picture-change\", active, event);\n  };\n}\n\nclass VideoPresentation {\n  #video;\n  #media;\n  #mode = \"inline\";\n  get mode() {\n    return this.#mode;\n  }\n  constructor(video, media) {\n    this.#video = video;\n    this.#media = media;\n    listenEvent(video, \"webkitpresentationmodechanged\", this.#onModeChange.bind(this));\n  }\n  get supported() {\n    return canUseVideoPresentation(this.#video);\n  }\n  async setPresentationMode(mode) {\n    if (this.#mode === mode) return;\n    this.#video.webkitSetPresentationMode(mode);\n  }\n  #onModeChange(event) {\n    const prevMode = this.#mode;\n    this.#mode = this.#video.webkitPresentationMode;\n    this.#media.player?.dispatch(\n      new DOMEvent(\"video-presentation-change\", {\n        detail: this.#mode,\n        trigger: event\n      })\n    );\n    [\"fullscreen\", \"picture-in-picture\"].forEach((type) => {\n      if (this.#mode === type || prevMode === type) {\n        this.#media.notify(`${type}-change`, this.#mode === type, event);\n      }\n    });\n  }\n}\nclass FullscreenPresentationAdapter {\n  #presentation;\n  get active() {\n    return this.#presentation.mode === \"fullscreen\";\n  }\n  get supported() {\n    return this.#presentation.supported;\n  }\n  constructor(presentation) {\n    this.#presentation = presentation;\n  }\n  async enter() {\n    this.#presentation.setPresentationMode(\"fullscreen\");\n  }\n  async exit() {\n    this.#presentation.setPresentationMode(\"inline\");\n  }\n}\nclass PIPPresentationAdapter {\n  #presentation;\n  get active() {\n    return this.#presentation.mode === \"picture-in-picture\";\n  }\n  get supported() {\n    return this.#presentation.supported;\n  }\n  constructor(presentation) {\n    this.#presentation = presentation;\n  }\n  async enter() {\n    this.#presentation.setPresentationMode(\"picture-in-picture\");\n  }\n  async exit() {\n    this.#presentation.setPresentationMode(\"inline\");\n  }\n}\n\nclass VideoProvider extends HTMLMediaProvider {\n  $$PROVIDER_TYPE = \"VIDEO\";\n  get type() {\n    return \"video\";\n  }\n  airPlay;\n  fullscreen;\n  pictureInPicture;\n  constructor(video, ctx) {\n    super(video, ctx);\n    scoped(() => {\n      this.airPlay = new HTMLAirPlayAdapter(video, ctx);\n      if (canUseVideoPresentation(video)) {\n        const presentation = new VideoPresentation(video, ctx);\n        this.fullscreen = new FullscreenPresentationAdapter(presentation);\n        this.pictureInPicture = new PIPPresentationAdapter(presentation);\n      } else if (canUsePictureInPicture(video)) {\n        this.pictureInPicture = new VideoPictureInPicture(video, ctx);\n      }\n    }, this.scope);\n  }\n  setup() {\n    super.setup();\n    if (canPlayHLSNatively(this.video)) {\n      new NativeHLSTextTracks(this.video, this.ctx);\n    }\n    this.ctx.textRenderers.attachVideo(this.video);\n    onDispose(() => {\n      this.ctx.textRenderers.attachVideo(null);\n    });\n    if (this.type === \"video\") this.ctx.notify(\"provider-setup\", this);\n  }\n  /**\n   * The native HTML `<video>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement}\n   */\n  get video() {\n    return this.media;\n  }\n}\n\nexport { VideoProvider };\n"],"names":["HLSController","config","Set","instance","this","constructor","video","ctx","setup","ctor","streamType","$state","isLive","includes","isLiveLowLatency","lowLatencyMode","backBufferLength","renderTextTracksNatively","dispatcher","bind","event","Object","values","Events","on","ERROR","callback","player","dispatch","detail","attachMedia","AUDIO_TRACK_SWITCHED","LEVEL_SWITCHED","LEVEL_LOADED","NON_NATIVE_TEXT_TRACKS_FOUND","CUES_PARSED","qualities","enableAuto","audioTracks","type","data","toDOMEventType","live","raf","start","stop","liveSyncPosition","set","Infinity","eventType","currentTrack","i","tracks","length","nonNativeTrack","init","subtitleTrack","closedCaptions","track","id","kind","src","url","label","language","lang","default","readyState","onModeChange","mode","textTracks","add","index","getById","cue","cues","positionAlign","addCue","trigger","select","quality","level","canPlay","totalduration","duration","targetduration","details","notify","Number","isFinite","media","currentLevel","setAuto","remoteTrack","localTrack","toString","name","levels","videoQuality","height","width","codec","codecSet","bitrate","dispatchEvent","fatal","recoverMediaError","error","message","code","auto","switch","selectedIndex","currentTime","audioTrack","onInstance","delete","loadSource","destroy","HLSLibLoader","lib","callbacks","onLoadStart","onLoaded","onLoadError","async","window","Hls","Error","err","loadHLSScript","loader","prototype","Function","isSupported","importHLS","e","HLSProvider","VideoProvider","$$PROVIDER_TYPE","static","canLiveSync","library","preconnect","super","source","preload","appendSource","currentSrc","removeSource","NativeHLSTextTracks","onaddtrack","nativeTrack","Array","from","children","find","el","findTextTrackElement","native","nativeHLS","lastIndex","onCueChange","event2","oncuechange","setMode","VideoPictureInPicture","active","document","pictureInPictureElement","supported","enter","requestPictureInPicture","exit","exitPictureInPicture","VideoPresentation","setPresentationMode","webkitSetPresentationMode","prevMode","webkitPresentationMode","forEach","FullscreenPresentationAdapter","presentation","PIPPresentationAdapter","airPlay","fullscreen","pictureInPicture","scope","textRenderers","attachVideo"],"sourceRoot":""}