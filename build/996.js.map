{"version":3,"file":"996.js","mappings":"iKAAA,MAAMA,EAAY,6FACZC,EAA4B,IAAIC,IAChCC,EAA+B,IAAID,IACzC,SAASE,EAAoBC,GAC3B,MAAMC,EAAUD,EAAIE,MAAMP,GAC1B,MAAO,CAAEQ,QAASF,IAAU,GAAIG,KAAMH,IAAU,GAClD,CACAI,eAAeC,EAAkBH,EAASI,EAAOC,GAC/C,GAAIZ,EAAUa,IAAIN,GAAU,OAAOP,EAAUc,IAAIP,GACjD,GAAIL,EAAaW,IAAIN,GAAU,OAAOL,EAAaY,IAAIP,GACvD,IAAIQ,EAAY,wEAAwER,IACpFK,IACFG,EAAYA,EAAUC,OAAO,MAAMJ,MAErC,MAAMK,EAAUC,OAAOC,MAAMJ,EAAW,CACtCK,KAAM,OACNC,OAAQV,EAAMU,SACbC,MAAMC,GAAaA,EAASC,SAAQF,MAAMG,IAC3C,MAAqDC,EAAcD,GAAME,eAAerB,MAAlE,iCAAyF,GAAIsB,EAASF,EAAc,gCAAgCA,mBAA+B,GAAIG,EAAO,CAClNC,MAAOL,GAAMK,OAAS,GACtBC,SAAUN,GAAMM,UAAY,EAC5BH,SACAI,IAA2B,UAAtBP,EAAKQ,cAGZ,OADAjC,EAAUkC,IAAI3B,EAASsB,GAChBA,CAAI,IACVM,SAAQ,IAAMjC,EAAakC,OAAO7B,KAErC,OADAL,EAAagC,IAAI3B,EAASU,GACnBA,CACT,C","sources":["webpack://rrze-video/./node_modules/vidstack/prod/chunks/vidstack-krOAtKMi.js"],"sourcesContent":["const videoIdRE = /(?:https:\\/\\/)?(?:player\\.)?vimeo(?:\\.com)?\\/(?:video\\/)?(\\d+)(?:(?:\\?hash=|\\?h=|\\/)(.*))?/;\nconst infoCache = /* @__PURE__ */ new Map();\nconst pendingFetch = /* @__PURE__ */ new Map();\nfunction resolveVimeoVideoId(src) {\n  const matches = src.match(videoIdRE);\n  return { videoId: matches?.[1], hash: matches?.[2] };\n}\nasync function getVimeoVideoInfo(videoId, abort, videoHash) {\n  if (infoCache.has(videoId)) return infoCache.get(videoId);\n  if (pendingFetch.has(videoId)) return pendingFetch.get(videoId);\n  let oembedSrc = `https://vimeo.com/api/oembed.json?url=https://player.vimeo.com/video/${videoId}`;\n  if (videoHash) {\n    oembedSrc = oembedSrc.concat(`?h=${videoHash}`);\n  }\n  const promise = window.fetch(oembedSrc, {\n    mode: \"cors\",\n    signal: abort.signal\n  }).then((response) => response.json()).then((data) => {\n    const thumnailRegex = /vimeocdn.com\\/video\\/(.*)?_/, thumbnailId = data?.thumbnail_url?.match(thumnailRegex)?.[1], poster = thumbnailId ? `https://i.vimeocdn.com/video/${thumbnailId}_1920x1080.webp` : \"\", info = {\n      title: data?.title ?? \"\",\n      duration: data?.duration ?? 0,\n      poster,\n      pro: data.account_type !== \"basic\"\n    };\n    infoCache.set(videoId, info);\n    return info;\n  }).finally(() => pendingFetch.delete(videoId));\n  pendingFetch.set(videoId, promise);\n  return promise;\n}\n\nexport { getVimeoVideoInfo, resolveVimeoVideoId };\n"],"names":["videoIdRE","infoCache","Map","pendingFetch","resolveVimeoVideoId","src","matches","match","videoId","hash","async","getVimeoVideoInfo","abort","videoHash","has","get","oembedSrc","concat","promise","window","fetch","mode","signal","then","response","json","data","thumbnailId","thumbnail_url","poster","info","title","duration","pro","account_type","set","finally","delete"],"sourceRoot":""}